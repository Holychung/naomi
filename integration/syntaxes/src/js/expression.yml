%YAML1.2
---

# Licensed under the Apache License, Version 2.0 (the “License”); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

hidden: true
scope: ...

contexts:
  main:
    - include: comment-no-pop
    - include: shared-main
    # Start of the expression.
    - match: (?=\S)
      set: [ optional-tail, head ]

  close-group:
    - match: \)
      scope: punctuation.section.group.end.js.fjsx15
      pop: true

  comma:
    - include: ~/fjsx15/operator/comma.yml

  comment-no-pop:
    - include: ~/fjsx15/comment.no-pop.yml

  do-expression:
    - match: do\b
      scope: keyword.control.do-expression.js.fjsx15
      set: [ meta-do-expression, do-expression-body-begin ]

  do-expression-body-begin:
    - match: \{
      scope: punctuation.section.block.begin.js.fjsx15
      set: do-expression-body-end

  do-expression-body-end:
    - match: \}
      scope: punctuation.section.block.end.js.fjsx15
      pop: true
    - match: (?=\S)
      push: statement-or-expression

  function-call:
    - include: comment-no-pop
    - include: main

  function-call-meta-scope:
    - meta_scope: meta.function-call.js.fjsx15
    - match: ""
      pop: true

  globals:
    - include: ~/fjsx15/node-js.yml
    - include: ~/fjsx15/react-js.yml
    - include: ~/fjsx15/jest.yml
    - include: ~/fjsx15/web.yml
    - include: ~/fjsx15/core.yml

  head:
    - include: comment-no-pop
    - include: do-expression
    - include: globals
    - include: ~/fjsx15/jsx1.yml
    - include: ~/fjsx15/literal.yml
    - include: ~/fjsx15/class.yml
    - include: ~/fjsx15/function-expression.yml
    - include: ~/fjsx15/function-call.yml
    - include: ~/fjsx15/variable.yml#function-assigned-to-variable
    - include: ~/fjsx15/constant.yml
    - include: ~/fjsx15/variable.yml
    # Open new expression group.
    - match: \(
      scope: punctuation.section.group.begin.js.fjsx15
      set: open-group

  meta-do-expression:
    - meta_scope: meta.do-expression.js.fjsx15
    - match: ""
      pop: true

  open-group:
    - meta_scope: meta.group.js.fjsx15
    - include: comment-no-pop
    # Close the current expression group.
    - include: close-group
    # Type cast.
    - match: (?=:)
      set: [ close-group, type-cast ]
    # Other expressions.
    - match: (?=\S)
      push:
        - include: shared-main
        # Start of the expression.
        - match: ""
          set: [ optional-tail, head ]

  optional-tail:
    - include: comment-no-pop
    # Function call.
    - match: (?=\()
      push: [
        function-call-meta-scope,
        function-call
      ]
    # Property access.
    - match: (?=\[)
      push: property-access
    # Other operators. At this point, operators will have a higher priority than
    # regex literals.
    - include: ~/fjsx15/operator.yml
    # Anything else not expected.
    - match: (?=\S)
      pop: true

  property-access:
    - include: comment-no-pop
    - include: ~/fjsx15/property-access.yml

  regex-literal:
    - include: ~/fjsx15/literal/string/regex.yml

  shared-main:
    - include: comma
    # At this stage, regex literals will have a higher priority than operators.
    - match: (?=/)
      set: [ optional-tail, regex-literal ]
    # Arrow functions need to be detected before expression groups.
    - include: ~/fjsx15/arrow-function.yml
    # At this point is possible to predict JSX tags before operators because
    # there’s no left operand for a "<" operator to be valid.
    - include: ~/fjsx15/jsx1-early.yml
    # Prevent floating point being highlighted as a dot operator followed by an
    # integer.
    - match: (?=\.\d)
      set:
        - include: ~/fjsx15/literal/number.yml
    # Detect operators as soon as possible.
    - include: ~/fjsx15/operator.yml

  statement-or-expression:
    - include: comment-no-pop
    - include: ~/fjsx15/statement.yml
    - include: ~/fjsx15/expression.yml

  type-cast:
    - include: ~/flow1/cast.yml
